"0","library(ggplot2)"
"0","library(kneedle)"
"0",""
"0",""
"0","elbow<-function(x){"
"0","  which.max(diff(diff(x)))+1"
"0","}"
"0",""
"0","spectral_bridges <-  function(X,"
"0","                              n_classes = NULL,"
"0","                              n_nodes = 30,"
"0","                              M = 1e3) {"
"0","  #  Vector quantification"
"0","  n <- nrow(X)"
"0","  kmeans_result <-"
"0","    kmeans("
"0","      X,"
"0","      centers = n_nodes,"
"0","      algorithm = ""Lloyd"","
"0","      iter.max = 1 ,nstart=10"
"0","    )"
"0","  kmeans_centers <- kmeans_result$centers"
"0","  kmeans_labels <-  kmeans_result$cluster"
"0","  kmeans_size <-  kmeans_result$size"
"0","  "
"0","  # Similarity computation"
"0","  affinity <- matrix(0, n_nodes, n_nodes)"
"0","  X.centered <-"
"0","    do.call(rbind, lapply(1:n, function(i) {"
"0","      X[i, ] - kmeans_centers[kmeans_labels[i], ]"
"0","    }))"
"0","  "
"0","  affinity <- outer(1:n_nodes, 1:n_nodes,"
"0","                    Vectorize(function(k, l) {"
"0","                      ifelse(k == l,"
"0","                             0,"
"0","                             (sum(pmax("
"0","                               0, (kmeans_centers[l,] - kmeans_centers[k, ]) %*% t(X.centered[(kmeans_labels =="
"0","                                                                                                 k), ])"
"0","                             )) +"
"0","                               sum(pmax("
"0","                                 0, (kmeans_centers[k,] - kmeans_centers[l, ]) %*% t(X.centered[(kmeans_labels =="
"0","                                                                                                   l), ])"
"0","                               ))) /"
"0","                               (sum((kmeans_centers[k,] - kmeans_centers[l, ]) ^"
"0","                                      2"
"0","                               ) * (kmeans_size[k] + kmeans_size[l])))"
"0","                    }))"
"0","  "
"0","  #affinity <- affinity - 0.5 * max(affinity)"
"0","  #q <- quantile(affinity, c(0.1,0.9))"
"0","  #gamma <- log(M) / (q[2] - q[1])"
"0","  #affinity<-affinity - 0.5*max(affinity)"
"0","  #affinity <- exp(gamma * (affinity-0.5*max(affinity)))"
"0","  #affinity <- exp(gamma * affinity)"
"0","  "
"0","  "
"0","  # Spectral Clustering of the coding vectors"
"0","  # Normalized Laplacian matrix"
"0","  D_inv_sqrt <- 1 / sqrt(rowSums(affinity))"
"0","  L <- diag(n_nodes) - t(affinity * D_inv_sqrt) * D_inv_sqrt"
"0","  eigen.res<-eigen(-L, symmetric = TRUE)"
"0","  ifelse(is.null(n_classes), "
"0","         n_classes <- kneedle(x=1:length(eigen.res$values),y=eigen.res$values)[1]-1,"
"0","         n_classes <-n_classes)"
"0","  print(elbow(eigen.res$values))"
"0","  plot(eigen.res$values)"
"0","  eigvecs <- eigen.res$vectors[,1:n_classes]"
"0","  eigvecs <- eigvecs / sqrt(rowSums(eigvecs ^ 2))"
"0","  labels <-"
"0","    kmeans(eigvecs, nstart = 20, centers = n_classes)$cluster"
"0","  "
"0","  # Contaminate"
"0","  clusters <- labels[kmeans_labels]"
"0","  "
"0","  return(list(clusters = clusters, centers = kmeans_centers))"
"0","}"
"0",""
"0",""
"0","plot_spectral_bridges<-function(X, centers, col_x=1, col_y=2, size_data = 1, size_centers = 3) {"
"0","  # Convert matrices to data frames"
"0","  df_X <- as.data.frame(X)"
"0","  df_centers <- as.data.frame(centers)"
"0","  "
"0","  "
"0","  # Create a ggplot"
"0"," plot <- ggplot() +"
"0","  geom_point(data = df_X, aes_string(x = names(df_X)[col_x], y = names(df_X)[col_y]), size = size_data, color = 'blue') +"
"0","  geom_point(data = df_centers, aes_string(x = names(df_centers)[col_x], y = names(df_centers)[col_y]), size = size_centers, color = 'red') +"
"0","  labs(x = names(df_X)[col_x], y = names(df_X)[col_y], title = paste(""Plot of"", names(df_X)[col_x], ""vs"", names(df_X)[col_y])) +"
"0","  theme_minimal()"
"0"," "
"0","  # Print the plot"
"0","  print(plot)"
"0","}"
"0",""
"0","K<-3"
"0","n<-100*2*K"
"0","delta=2"
"0","y<-rep(1:K,each=100)"
"0","X<-rbind(matrix(rnorm(n/K),n/K/2,2),matrix(rnorm(n/K),n/K/2,2)+delta,matrix(rnorm(n/K),n/K/2,2)+2*0) "
"0",""
"0","res<-spectral_bridges(X,n_nodes=30,n_classes=NULL)"
"2","Warning: did not converge in 1 iteration"
"2","Warning: did not converge in 1 iteration"
"2","Warning: did not converge in 1 iteration"
"2","Warning: did not converge in 1 iteration"
"2","Warning: did not converge in 1 iteration"
"2","Warning: did not converge in 1 iteration"
"2","Warning: did not converge in 1 iteration"
"2","Warning: did not converge in 1 iteration"
"2","Warning: did not converge in 1 iteration"
"2","Warning: did not converge in 1 iteration"
"1","[1]"
"1"," 2"
"1","
"
